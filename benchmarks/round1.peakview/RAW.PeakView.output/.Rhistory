source("http://www.bioconductor.org/biocLite.R")
biocLite("synapter")
vignette("synapter", package="synapter")
citation("synapter")
source('~/Dropbox/E2P_pers/e2p/R_scripts/e2p_analysis.R')
lm(y ~ x)
traceback()
debug(lm)
lm(y ~ x)
options(error = recover)
read.csv("nosuchfile")
source('~/Dropbox/Coursera/DataScienceSpecialization/02.R_Programming/Week3/quizz3.R')
?iris
show(iris)
split(iris, iris$Species)
split(iris, iris$Species)
sapply(split(iris, iris$Species), function(x) colMeans(x[, c("Sepal.Length"), na.rm=T])
)
sapply(split(iris, iris$Species), function(x) colMeans(x[, c("Sepal.Length")], na.rm=T))
sapply(split(iris, iris$Species), function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")], na.rm=T) )
sapply(split(iris, iris$Species), function(x) colMeans(x[, "Sepal.Length"], na.rm=T) )
sapply(split(iris, iris$Species), function(x) colMeans(x[, x$Sepal.Length], na.rm=T) )
sapply(split(iris, iris$Species), function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")], na.rm=T) )
q1 <- sapply(split(iris, iris$Species), function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")], na.rm=T) )
q1 <- q1$Sepal.Length
str(q1)
q1 <- q1["Sepal.Length"]
q1 <- sapply(split(iris, iris$Species), function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")], na.rm=T) )
q1
head(iris)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[,1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
q1 <- tapply(iris$Sepal.Length, iris$Species, mean, na.rm=T)
q1
q1 <- tapply(iris$Sepal.Length, iris$Species, mean, na.rm=T)$virginica  # easier
q1 <- tapply(iris$Sepal.Length, iris$Species, mean, na.rm=T)["virginica"] # easier
q1 <- tapply(iris$Sepal.Length, iris$Species, mean, na.rm=T)["virginica"] # easier
q1
tapply(mtcars$hp, mtcars$cyl, mean)
hpavg <- tapply(mtcars$hp, mtcars$cyl, mean)
hpavg$4
hpavg[4]
hpavg["4"]
q4 <- abs(hpavg["4"] - hpavg["8"])
q4
debug(ls)
ls
debug(ls)
ls()
source('~/Dropbox/PAPER_SWATHbenchmark/hye.r/data.peakview/report.from.software/formatPeakViewExport.R')
setwd("~/Dropbox/PAPER_SWATHbenchmark/hye.r/data.peakview/report.from.software")
source('~/Dropbox/PAPER_SWATHbenchmark/hye.r/data.peakview/report.from.software/formatPeakViewExport.R')
if(!require(xlsx)) { install.packages("xlsx"); library(xlsx) }
read.xlsx2(file = inputfile, sheetName= sheetproteins,
startRow= 1, colIndex= 1:7, endRow= 50,
header= T,
colClasses= c( "character", rep("numeric", 6)))
